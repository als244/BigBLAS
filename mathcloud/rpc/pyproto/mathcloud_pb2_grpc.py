# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import mathcloud_pb2 as mathcloud__pb2


class MathCloudStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateFile = channel.unary_unary(
                '/mathcloud.MathCloud/CreateFile',
                request_serializer=mathcloud__pb2.CreateFileMessage.SerializeToString,
                response_deserializer=mathcloud__pb2.CreateFileReply.FromString,
                )
        self.DeleteFile = channel.unary_unary(
                '/mathcloud.MathCloud/DeleteFile',
                request_serializer=mathcloud__pb2.DeleteFileMessage.SerializeToString,
                response_deserializer=mathcloud__pb2.DeleteFileReply.FromString,
                )
        self.PushData = channel.unary_unary(
                '/mathcloud.MathCloud/PushData',
                request_serializer=mathcloud__pb2.SendDataChunk.SerializeToString,
                response_deserializer=mathcloud__pb2.SendDataChunkReply.FromString,
                )
        self.PullData = channel.unary_unary(
                '/mathcloud.MathCloud/PullData',
                request_serializer=mathcloud__pb2.ReceiveDataChunkRequest.SerializeToString,
                response_deserializer=mathcloud__pb2.ReceiveDataChunk.FromString,
                )
        self.RequestOperation = channel.unary_unary(
                '/mathcloud.MathCloud/RequestOperation',
                request_serializer=mathcloud__pb2.OperationRequest.SerializeToString,
                response_deserializer=mathcloud__pb2.OperationRequestReply.FromString,
                )
        self.PerformOperation = channel.unary_unary(
                '/mathcloud.MathCloud/PerformOperation',
                request_serializer=mathcloud__pb2.DoOperation.SerializeToString,
                response_deserializer=mathcloud__pb2.DoOperationReply.FromString,
                )


class MathCloudServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushData(self, request, context):
        """might want to make these streaming...? 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PullData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestOperation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PerformOperation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MathCloudServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateFile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFile,
                    request_deserializer=mathcloud__pb2.CreateFileMessage.FromString,
                    response_serializer=mathcloud__pb2.CreateFileReply.SerializeToString,
            ),
            'DeleteFile': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFile,
                    request_deserializer=mathcloud__pb2.DeleteFileMessage.FromString,
                    response_serializer=mathcloud__pb2.DeleteFileReply.SerializeToString,
            ),
            'PushData': grpc.unary_unary_rpc_method_handler(
                    servicer.PushData,
                    request_deserializer=mathcloud__pb2.SendDataChunk.FromString,
                    response_serializer=mathcloud__pb2.SendDataChunkReply.SerializeToString,
            ),
            'PullData': grpc.unary_unary_rpc_method_handler(
                    servicer.PullData,
                    request_deserializer=mathcloud__pb2.ReceiveDataChunkRequest.FromString,
                    response_serializer=mathcloud__pb2.ReceiveDataChunk.SerializeToString,
            ),
            'RequestOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestOperation,
                    request_deserializer=mathcloud__pb2.OperationRequest.FromString,
                    response_serializer=mathcloud__pb2.OperationRequestReply.SerializeToString,
            ),
            'PerformOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.PerformOperation,
                    request_deserializer=mathcloud__pb2.DoOperation.FromString,
                    response_serializer=mathcloud__pb2.DoOperationReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mathcloud.MathCloud', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MathCloud(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mathcloud.MathCloud/CreateFile',
            mathcloud__pb2.CreateFileMessage.SerializeToString,
            mathcloud__pb2.CreateFileReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mathcloud.MathCloud/DeleteFile',
            mathcloud__pb2.DeleteFileMessage.SerializeToString,
            mathcloud__pb2.DeleteFileReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mathcloud.MathCloud/PushData',
            mathcloud__pb2.SendDataChunk.SerializeToString,
            mathcloud__pb2.SendDataChunkReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PullData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mathcloud.MathCloud/PullData',
            mathcloud__pb2.ReceiveDataChunkRequest.SerializeToString,
            mathcloud__pb2.ReceiveDataChunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RequestOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mathcloud.MathCloud/RequestOperation',
            mathcloud__pb2.OperationRequest.SerializeToString,
            mathcloud__pb2.OperationRequestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PerformOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mathcloud.MathCloud/PerformOperation',
            mathcloud__pb2.DoOperation.SerializeToString,
            mathcloud__pb2.DoOperationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
